//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.danikula.videocache.sample;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.VideoView;
import com.danikula.videocache.sample.R.layout;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class VideoFragment_
    extends com.danikula.videocache.sample.VideoFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    public final static String URL_ARG = "url";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_video, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        contentView_ = null;
        super.onDestroyView();
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectFragmentArguments_();
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static VideoFragment_.FragmentBuilder_ builder() {
        return new VideoFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        cacheStatusImageView = ((ImageView) hasViews.findViewById(com.danikula.videocache.sample.R.id.cacheStatusImageView));
        videoView = ((VideoView) hasViews.findViewById(com.danikula.videocache.sample.R.id.videoView));
        progressBar = ((ProgressBar) hasViews.findViewById(com.danikula.videocache.sample.R.id.progressBar));
        {
            final SeekBar view = ((SeekBar) hasViews.findViewById(com.danikula.videocache.sample.R.id.progressBar));
            if (view!= null) {
                view.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {


                    @Override
                    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                    }

                    @Override
                    public void onStartTrackingTouch(SeekBar seekBar) {
                    }

                    @Override
                    public void onStopTrackingTouch(SeekBar seekBar) {
                        VideoFragment_.this.seekVideo();
                    }

                }
                );
            }
        }
        afterViewInjected();
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey(URL_ARG)) {
                url = args_.getString(URL_ARG);
            }
        }
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<VideoFragment_.FragmentBuilder_, com.danikula.videocache.sample.VideoFragment>
    {


        @Override
        public com.danikula.videocache.sample.VideoFragment build() {
            VideoFragment_ fragment_ = new VideoFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

        public VideoFragment_.FragmentBuilder_ url(String url) {
            args.putString(URL_ARG, url);
            return this;
        }

    }

}
